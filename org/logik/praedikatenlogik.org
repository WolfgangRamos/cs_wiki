#+TITLE: Prädikatenlogik
#+STARTUP: content
#+STARTUP: latexpreview
#+STARTUP: inlineimages
#+OPTIONS: toc:nil
#+BEGIN_HTML
---
layout: page
title: Pädikatenlogik
---
#+END_HTML

* Inhalt

- Prädikatenlogik
  - [[./pl/sorten.org][Sorten]]
  - [[./pl/signaturen.org][Signaturen]]
  - [[./pl/strukturen.org][Strukturen]]


*** TODO Variablen spezifizieren

*** Koinzidenzlemma

Sei $S$ eine Sortenmenge, $\Sigma$ eine $S$-Signatur, $\St$ eine
$\Sigma$-Struktur und seien $\beta,\beta'$ $\St$-Belegungen mit
$\beta|\fvars(\varphi) = \beta'|\fvars(\varphi)$ gilt: 

$\llb \varphi\rrb_{\beta}^{\St} = \llb \varphi\rrb_{\beta'}^{\St}$

Wir können also wieder mit partiellen Belegungen arbeiten.

** Substitution

*** Ersetzung von 

s. Substituion in der Ausagenlogik

*** Termsubstitution

*(Term-)Substitution* ist das Ersetzen von freien Variablen durch
Terme in einer Formel $\varphi \in F_{PL}(\Sigma)$.

Eine Substitution ist eine Abbildung, die Variablen Terme derselben
Sorte zuordnet.

Eine partielle Funktion $\sigma: V_{FO} \rightarrow T(\Sigma)$ heißt
*Termsubstitution* (auch $\Sigma$-Substitution), falls für jedes $i \in
\N$ und jedes $s\in S$ mit $x_i^s \in \def(\sigma)$ auch
$\sigma(x_i^s) \in T_s(\Sigma)$ gilt. Wir definieren die Anwendung
einer Substitution induktiv durch:

*IA:*

- $c\sigma = c$ für alle $c\in C$ und

\begin{equation}
x_i^s\sigma = \begin{cases}
  \dots \\
\end{cases}
\end{equation}

*IS:*

 ist $f in F$ ... dann gilt ...

*** Termsubstitution auf Formeln

*IA:*

- $\top\sigma = \top$
- $\bot\sigma = \bot$
- $(t \deq t')\sigma = t\sigma \deq t'\sigma$
- $r(t_0, \dots t_n)\sigma = r(t_0\sigma, \dots t_n\sigma)$

*IS:*

- Sei $J$ ein $n$-stelliger Junktor, dann gilt $J(\varphi_0, \dots, \varphi_{n-1})\sigma

Wir definieren die Menge der Variablen, die im Wirkungsbereich einer Quantifizierung von $x_i^s$ liegen durch $\bvars_{x_i^s}$




** TODO Skolemisierung

Für Formeln, in denen keine freien Variablen auftreten.


** TODO Erfüllarkeitstests

** TODO Termsturkuren und Modelle

Termsturkturen und Termmodelle entsprechen algebraischen Datentypen in
der Programmierung.

** Elimieren von Gleichheit

/Gleichheitsaxiome/:

- /Reflexivität/: $\forall x_0 e(x_0,x_0)$
- /Symmetrie/: $\forall x_0 \forall x_1 (e(x_0,x_1) \leftarrow e(x_1, x_0))$
- /Transitivität/ $\forall x_0 \forall x_1 \forall x_2 (e(x_0,x_1) \wedge e(x_1, x_2) \rightarrow e(x_0,x_2))$
- $\forall x_0 \dots \forall x_{2n-1} (e(x_0,x_1) \wedge e(x_2, x_3)
  \wedge \dots \wedge e(x_{2n-2}, x_{2n-1}) \rightarrow e(f(x_0, x_2,
  \dots, x_{2n-2}), f(x_1, x_3, \dots, x_{2n-1})))$ für $f//n \in \Sigma$
- ...




Wir definieren die Relation $$

* TODO Fragen

- [[http://stueckwerk-logik.uni-kiel.de/stuecke/redukte-expansionen.html#841aacaba53c5d287fd3076296f38f12][Expansion
  und Redukt (Bemerkung 1)]]: wie soll hier die richtung
  $\Longleftarrow$ gezeigt werden?

